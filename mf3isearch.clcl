class MFiler5 version 3 {
    var isearchString:String;
    var isearchMode:bool;

    def initialize():dynamic {
        inherit();
        
        isearchMode = false;

        keyEvents['/'.to_int] = lambda(self:MFiler5, key:int, key2:int) {
            isearchMode();
        }
    }
    
    def isearchMode() {
        isearchMode = true;
        isearchString = "";
    }
    def finishISearch() {
        isearchMode = false;
    }
    
    def view(): dynamic {
        inherit();
        
        maxy := getmaxy();
        
        if(isearchMode) {
            mvprintw(maxy-1, 0, "/\{isearchString}");
        }
    }
    
    def runKeyEvents(key:int, key2:int):dynamic {
        if(isearchMode) {
            when(key) {
                case ('\n'.to_int) {
                    finishISearch();
                }
                case (('H'-'A').to_int, KEY_BACKSPACE) {
                    isearchString.delete(-1);
                    
                    n := 0;
                    files.each {
                        if(it.indexOf(isearchString) != -1)
                        {
                            scrollTop = n;
                            cursor = 0;
                            break;
                        }
                        
                        n++;
                    }
                }
                else {
                    isearchString.append(key.to_char);
                    
                    n := 0;
                    files.each {
                        if(it.indexOf(isearchString) != -1)
                        {
                            scrollTop = n;
                            cursor = 0;
                            break;
                        }
                        
                        n++;
                    }
                }
            }
        }
        else {
            inherit(key, key2);
        }
    }
}